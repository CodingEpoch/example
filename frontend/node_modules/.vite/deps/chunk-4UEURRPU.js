import {
  init_utils
} from "./chunk-CMTQ2IVZ.js";
import {
  getTransitionProps,
  init_utils as init_utils2
} from "./chunk-5FWQOH2F.js";
import {
  init_useTheme,
  useTheme
} from "./chunk-NVGMITRW.js";
import {
  Transition_default,
  init_esm as init_esm2
} from "./chunk-BP2CIXS6.js";
import {
  deprecatedPropType,
  init_deprecatedPropType
} from "./chunk-EU4TR4YR.js";
import {
  useForkRef
} from "./chunk-I4AUBGLO.js";
import {
  init_withStyles,
  withStyles_default
} from "./chunk-FWBHA4J6.js";
import {
  _objectWithoutProperties,
  _slicedToArray,
  chainPropTypes,
  duration,
  init_esm,
  init_objectWithoutProperties,
  init_slicedToArray,
  init_transitions
} from "./chunk-AW56PTTK.js";
import {
  _extends,
  init_extends
} from "./chunk-DQPHAHAW.js";
import {
  require_prop_types
} from "./chunk-QHXF6CUT.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-RA6GVHQM.js";
import {
  require_react
} from "./chunk-42CJYN7C.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@material-ui/core/esm/Collapse/Collapse.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
var React = __toESM(require_react());
init_clsx_m();
var import_prop_types = __toESM(require_prop_types());
init_esm();
init_esm2();
init_withStyles();
init_transitions();
init_deprecatedPropType();
init_utils2();
init_useTheme();
init_utils();
var styles = function styles2(theme) {
  return {
    root: {
      height: 0,
      overflow: "hidden",
      transition: theme.transitions.create("height")
    },
    entered: {
      height: "auto",
      overflow: "visible"
    },
    hidden: {
      visibility: "hidden"
    },
    wrapper: {
      display: "flex"
    },
    wrapperInner: {
      width: "100%"
    }
  };
};
var Collapse = React.forwardRef(function Collapse2(props, ref) {
  var children = props.children, classes = props.classes, className = props.className, collapsedHeight = props.collapsedHeight, _props$collapsedSize = props.collapsedSize, collapsedSizeProp = _props$collapsedSize === void 0 ? "0px" : _props$collapsedSize, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? duration.standard : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "classes", "className", "collapsedHeight", "collapsedSize", "component", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var theme = useTheme();
  var timer = React.useRef();
  var wrapperRef = React.useRef(null);
  var autoTransitionDuration = React.useRef();
  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === "number" ? "".concat(collapsedHeight || collapsedSizeProp, "px") : collapsedHeight || collapsedSizeProp;
  React.useEffect(function() {
    return function() {
      clearTimeout(timer.current);
    };
  }, []);
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = React.useRef(null);
  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : void 0);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref2 = _slicedToArray(_ref, 2), node = _ref2[0], isAppearing = _ref2[1];
        if (isAppearing === void 0) {
          callback(node);
        } else {
          callback(node, isAppearing);
        }
      }
    };
  };
  var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
    node.style.height = collapsedSize;
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback(function(node, isAppearing) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps = getTransitionProps({
      style,
      timeout
    }, {
      mode: "enter"
    }), transitionDuration = _getTransitionProps.duration;
    if (timeout === "auto") {
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node.style.height = "".concat(wrapperHeight, "px");
    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(function(node, isAppearing) {
    node.style.height = "auto";
    if (onEntered) {
      onEntered(node, isAppearing);
    }
  });
  var handleExit = normalizedTransitionCallback(function(node) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    node.style.height = "".concat(wrapperHeight, "px");
    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleExiting = normalizedTransitionCallback(function(node) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps2 = getTransitionProps({
      style,
      timeout
    }, {
      mode: "exit"
    }), transitionDuration = _getTransitionProps2.duration;
    if (timeout === "auto") {
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node.style.height = collapsedSize;
    if (onExiting) {
      onExiting(node);
    }
  });
  var addEndListener = function addEndListener2(nodeOrNext, maybeNext) {
    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
    if (timeout === "auto") {
      timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    }
  };
  return React.createElement(TransitionComponent, _extends({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    timeout: timeout === "auto" ? null : timeout
  }, other), function(state, childProps) {
    return React.createElement(Component, _extends({
      className: clsx_m_default(classes.root, classes.container, className, {
        "entered": classes.entered,
        "exited": !inProp && collapsedSize === "0px" && classes.hidden
      }[state]),
      style: _extends({
        minHeight: collapsedSize
      }, style),
      ref: handleRef
    }, childProps), React.createElement("div", {
      className: classes.wrapper,
      ref: wrapperRef
    }, React.createElement("div", {
      className: classes.wrapperInner
    }, children)));
  });
});
true ? Collapse.propTypes = {
  children: import_prop_types.default.node,
  classes: chainPropTypes(import_prop_types.default.object, function(props) {
    if (props.classes && props.classes.container) {
      throw new Error(["Material-UI: the classes.container key is deprecated.", "Use `classes.root` instead", "The name of the pseudo-class was changed for consistency."].join("\n"));
    }
    return null;
  }),
  className: import_prop_types.default.string,
  collapsedHeight: deprecatedPropType(import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]), "The prop was renamed to support the vertical orientation, use `collapsedSize` instead"),
  collapsedSize: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  component: import_prop_types.default.elementType,
  disableStrictModeCompat: import_prop_types.default.bool,
  in: import_prop_types.default.bool,
  onEnter: import_prop_types.default.func,
  onEntered: import_prop_types.default.func,
  onEntering: import_prop_types.default.func,
  onExit: import_prop_types.default.func,
  onExited: import_prop_types.default.func,
  onExiting: import_prop_types.default.func,
  style: import_prop_types.default.object,
  timeout: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["auto"]), import_prop_types.default.number, import_prop_types.default.shape({
    appear: import_prop_types.default.number,
    enter: import_prop_types.default.number,
    exit: import_prop_types.default.number
  })])
} : void 0;
Collapse.muiSupportAuto = true;
var Collapse_default = withStyles_default(styles, {
  name: "MuiCollapse"
})(Collapse);

export {
  Collapse_default
};
//# sourceMappingURL=chunk-4UEURRPU.js.map
