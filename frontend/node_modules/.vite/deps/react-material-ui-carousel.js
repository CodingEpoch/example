import {
  require_createSvgIcon,
  require_interopRequireDefault,
  require_interopRequireWildcard
} from "./chunk-QR66XWLS.js";
import {
  IconButton_exports,
  init_IconButton
} from "./chunk-WBUCFJ47.js";
import "./chunk-FS7RI2ZR.js";
import {
  init_styles,
  styles_exports
} from "./chunk-3T5XEQND.js";
import "./chunk-IXS6NEF3.js";
import "./chunk-5HKXDC6Y.js";
import "./chunk-UDEREPLU.js";
import {
  Fade_exports,
  Slide_exports,
  init_Fade,
  init_Slide
} from "./chunk-KJCJSYMN.js";
import "./chunk-5FWQOH2F.js";
import "./chunk-Q7K6H7GU.js";
import "./chunk-SCMOBTBD.js";
import "./chunk-K53LC6J6.js";
import "./chunk-RITKMPOR.js";
import "./chunk-SIQTENHM.js";
import "./chunk-SHNSTXFN.js";
import "./chunk-BP2CIXS6.js";
import "./chunk-C3J6IHOV.js";
import "./chunk-I4AUBGLO.js";
import "./chunk-3XI55KIC.js";
import "./chunk-EU4TR4YR.js";
import "./chunk-TMGFNPBF.js";
import "./chunk-B23E2GN4.js";
import "./chunk-MLR63635.js";
import "./chunk-DQPHAHAW.js";
import "./chunk-ML6JCVWV.js";
import "./chunk-QHXF6CUT.js";
import {
  require_react
} from "./chunk-42CJYN7C.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-J43GMYXM.js";

// node_modules/auto-bind/index.js
var require_auto_bind = __commonJS({
  "node_modules/auto-bind/index.js"(exports, module) {
    "use strict";
    var getAllProperties = (object) => {
      const props = /* @__PURE__ */ new Set();
      do {
        for (const key of Reflect.ownKeys(object)) {
          props.add([object, key]);
        }
      } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);
      return props;
    };
    module.exports = (self2, options) => {
      options = Object.assign({}, options);
      const filter = (key) => {
        const match = (pattern) => typeof pattern === "string" ? key === pattern : pattern.test(key);
        if (options.include) {
          return options.include.some(match);
        }
        if (options.exclude) {
          return !options.exclude.some(match);
        }
        return true;
      };
      for (const [object, key] of getAllProperties(self2.constructor.prototype)) {
        if (key === "constructor" || !filter(key)) {
          continue;
        }
        const descriptor = Reflect.getOwnPropertyDescriptor(object, key);
        if (descriptor && typeof descriptor.value === "function") {
          self2[key] = self2[key].bind(self2);
        }
      }
      return self2;
    };
    var excludedReactMethods = [
      "componentWillMount",
      "UNSAFE_componentWillMount",
      "render",
      "getSnapshotBeforeUpdate",
      "componentDidMount",
      "componentWillReceiveProps",
      "UNSAFE_componentWillReceiveProps",
      "shouldComponentUpdate",
      "componentWillUpdate",
      "UNSAFE_componentWillUpdate",
      "componentDidUpdate",
      "componentWillUnmount",
      "componentDidCatch",
      "setState",
      "forceUpdate"
    ];
    module.exports.react = (self2, options) => {
      options = Object.assign({}, options);
      options.exclude = (options.exclude || []).concat(excludedReactMethods);
      return module.exports(self2, options);
    };
  }
});

// node_modules/@material-ui/icons/FiberManualRecord.js
var require_FiberManualRecord = __commonJS({
  "node_modules/@material-ui/icons/FiberManualRecord.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React = _interopRequireWildcard(require_react());
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _default = (0, _createSvgIcon.default)(React.createElement("circle", {
      cx: "12",
      cy: "12",
      r: "8"
    }), "FiberManualRecord");
    exports.default = _default;
  }
});

// node_modules/@material-ui/icons/NavigateBefore.js
var require_NavigateBefore = __commonJS({
  "node_modules/@material-ui/icons/NavigateBefore.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React = _interopRequireWildcard(require_react());
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _default = (0, _createSvgIcon.default)(React.createElement("path", {
      d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
    }), "NavigateBefore");
    exports.default = _default;
  }
});

// node_modules/@material-ui/icons/NavigateNext.js
var require_NavigateNext = __commonJS({
  "node_modules/@material-ui/icons/NavigateNext.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React = _interopRequireWildcard(require_react());
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _default = (0, _createSvgIcon.default)(React.createElement("path", {
      d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
    }), "NavigateNext");
    exports.default = _default;
  }
});

// node_modules/react-swipeable/dist/react-swipeable.umd.js
var require_react_swipeable_umd = __commonJS({
  "node_modules/react-swipeable/dist/react-swipeable.umd.js"(exports, module) {
    (function(global, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require_react()) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global = global || self, factory(global.swipeable = {}, global.react));
    })(exports, function(exports2, React) {
      function _interopNamespace(e) {
        if (e && e.__esModule)
          return e;
        var n = /* @__PURE__ */ Object.create(null);
        if (e) {
          Object.keys(e).forEach(function(k) {
            if (k !== "default") {
              var d = Object.getOwnPropertyDescriptor(e, k);
              Object.defineProperty(n, k, d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              });
            }
          });
        }
        n["default"] = e;
        return n;
      }
      var React__namespace = _interopNamespace(React);
      function _extends() {
        _extends = Object.assign || function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends.apply(this, arguments);
      }
      var LEFT = "Left";
      var RIGHT = "Right";
      var UP = "Up";
      var DOWN = "Down";
      var defaultProps = {
        delta: 10,
        preventDefaultTouchmoveEvent: false,
        rotationAngle: 0,
        trackMouse: false,
        trackTouch: true
      };
      var initialState = {
        first: true,
        initial: [0, 0],
        start: 0,
        swiping: false,
        xy: [0, 0]
      };
      var mouseMove = "mousemove";
      var mouseUp = "mouseup";
      var touchEnd = "touchend";
      var touchMove = "touchmove";
      var touchStart = "touchstart";
      function getDirection(absX, absY, deltaX, deltaY) {
        if (absX > absY) {
          if (deltaX > 0) {
            return RIGHT;
          }
          return LEFT;
        } else if (deltaY > 0) {
          return DOWN;
        }
        return UP;
      }
      function rotateXYByAngle(pos, angle) {
        if (angle === 0)
          return pos;
        var angleInRadians = Math.PI / 180 * angle;
        var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);
        var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);
        return [x, y];
      }
      function getHandlers(set, handlerProps) {
        var onStart = function onStart2(event) {
          if (event && "touches" in event && event.touches.length > 1)
            return;
          set(function(state, props) {
            if (props.trackMouse) {
              document.addEventListener(mouseMove, onMove);
              document.addEventListener(mouseUp, onUp);
            }
            var _ref = "touches" in event ? event.touches[0] : event, clientX = _ref.clientX, clientY = _ref.clientY;
            var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);
            return _extends({}, state, initialState, {
              initial: [].concat(xy),
              xy,
              start: event.timeStamp || 0
            });
          });
        };
        var onMove = function onMove2(event) {
          set(function(state, props) {
            if ("touches" in event && event.touches.length > 1) {
              return state;
            }
            var _ref2 = "touches" in event ? event.touches[0] : event, clientX = _ref2.clientX, clientY = _ref2.clientY;
            var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle), x = _rotateXYByAngle[0], y = _rotateXYByAngle[1];
            var deltaX = x - state.xy[0];
            var deltaY = y - state.xy[1];
            var absX = Math.abs(deltaX);
            var absY = Math.abs(deltaY);
            var time = (event.timeStamp || 0) - state.start;
            var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);
            var vxvy = [deltaX / (time || 1), deltaY / (time || 1)];
            var dir = getDirection(absX, absY, deltaX, deltaY);
            var delta = typeof props.delta === "number" ? props.delta : props.delta[dir.toLowerCase()] || defaultProps.delta;
            if (absX < delta && absY < delta && !state.swiping)
              return state;
            var eventData = {
              absX,
              absY,
              deltaX,
              deltaY,
              dir,
              event,
              first: state.first,
              initial: state.initial,
              velocity,
              vxvy
            };
            eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);
            props.onSwiping && props.onSwiping(eventData);
            var cancelablePageSwipe = false;
            if (props.onSwiping || props.onSwiped || "onSwiped" + dir in props) {
              cancelablePageSwipe = true;
            }
            if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable)
              event.preventDefault();
            return _extends({}, state, {
              first: false,
              eventData,
              swiping: true
            });
          });
        };
        var onEnd = function onEnd2(event) {
          set(function(state, props) {
            var eventData;
            if (state.swiping && state.eventData) {
              eventData = _extends({}, state.eventData, {
                event
              });
              props.onSwiped && props.onSwiped(eventData);
              var onSwipedDir = props["onSwiped" + eventData.dir];
              onSwipedDir && onSwipedDir(eventData);
            } else {
              props.onTap && props.onTap({
                event
              });
            }
            return _extends({}, state, initialState, {
              eventData
            });
          });
        };
        var cleanUpMouse = function cleanUpMouse2() {
          document.removeEventListener(mouseMove, onMove);
          document.removeEventListener(mouseUp, onUp);
        };
        var onUp = function onUp2(e) {
          cleanUpMouse();
          onEnd(e);
        };
        var attachTouch = function attachTouch2(el, passive) {
          var cleanup = function cleanup2() {
          };
          if (el && el.addEventListener) {
            var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];
            tls.forEach(function(_ref3) {
              var e = _ref3[0], h = _ref3[1];
              return el.addEventListener(e, h, {
                passive
              });
            });
            cleanup = function cleanup2() {
              return tls.forEach(function(_ref4) {
                var e = _ref4[0], h = _ref4[1];
                return el.removeEventListener(e, h);
              });
            };
          }
          return cleanup;
        };
        var onRef = function onRef2(el) {
          if (el === null)
            return;
          set(function(state, props) {
            if (state.el === el)
              return state;
            var addState = {};
            if (state.el && state.el !== el && state.cleanUpTouch) {
              state.cleanUpTouch();
              addState.cleanUpTouch = void 0;
            }
            if (props.trackTouch && el) {
              addState.cleanUpTouch = attachTouch(el, !props.preventDefaultTouchmoveEvent);
            }
            return _extends({}, state, {
              el
            }, addState);
          });
        };
        var output = {
          ref: onRef
        };
        if (handlerProps.trackMouse) {
          output.onMouseDown = onStart;
        }
        return [output, attachTouch];
      }
      function updateTransientState(state, props, attachTouch) {
        var addState = {};
        if (!props.trackTouch && state.cleanUpTouch) {
          state.cleanUpTouch();
          addState.cleanUpTouch = void 0;
        } else if (props.trackTouch && !state.cleanUpTouch) {
          if (state.el) {
            addState.cleanUpTouch = attachTouch(state.el, !props.preventDefaultTouchmoveEvent);
          }
        }
        return _extends({}, state, addState);
      }
      function useSwipeable(options) {
        var trackMouse = options.trackMouse;
        var transientState = React__namespace.useRef(_extends({}, initialState));
        var transientProps = React__namespace.useRef(_extends({}, defaultProps));
        transientProps.current = _extends({}, defaultProps, options, {
          delta: options.delta === void 0 ? defaultProps.delta : options.delta,
          rotationAngle: options.rotationAngle === void 0 ? defaultProps.rotationAngle : options.rotationAngle,
          trackTouch: options.trackTouch === void 0 ? defaultProps.trackTouch : options.trackTouch
        });
        var _React$useMemo = React__namespace.useMemo(function() {
          return getHandlers(function(stateSetter) {
            return transientState.current = stateSetter(transientState.current, transientProps.current);
          }, {
            trackMouse
          });
        }, [trackMouse]), handlers = _React$useMemo[0], attachTouch = _React$useMemo[1];
        transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);
        return handlers;
      }
      exports2.DOWN = DOWN;
      exports2.LEFT = LEFT;
      exports2.RIGHT = RIGHT;
      exports2.UP = UP;
      exports2.useSwipeable = useSwipeable;
    });
  }
});

// node_modules/react-material-ui-carousel/dist/components/Carousel.js
var require_Carousel = __commonJS({
  "node_modules/react-material-ui-carousel/dist/components/Carousel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _Fade = (init_Fade(), __toCommonJS(Fade_exports));
    var _Fade2 = _interopRequireDefault(_Fade);
    var _Slide = (init_Slide(), __toCommonJS(Slide_exports));
    var _Slide2 = _interopRequireDefault(_Slide);
    var _IconButton = (init_IconButton(), __toCommonJS(IconButton_exports));
    var _IconButton2 = _interopRequireDefault(_IconButton);
    var _styles = (init_styles(), __toCommonJS(styles_exports));
    var _autoBind = require_auto_bind();
    var _autoBind2 = _interopRequireDefault(_autoBind);
    var _FiberManualRecord = require_FiberManualRecord();
    var _FiberManualRecord2 = _interopRequireDefault(_FiberManualRecord);
    var _NavigateBefore = require_NavigateBefore();
    var _NavigateBefore2 = _interopRequireDefault(_NavigateBefore);
    var _NavigateNext = require_NavigateNext();
    var _NavigateNext2 = _interopRequireDefault(_NavigateNext);
    var _reactSwipeable = require_react_swipeable_umd();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _toConsumableArray(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      } else {
        return Array.from(arr);
      }
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    var styles = {
      root: {
        position: "relative",
        overflow: "hidden"
      },
      indicators: {
        width: "100%",
        marginTop: "10px",
        textAlign: "center"
      },
      indicator: {
        cursor: "pointer",
        transition: "200ms",
        padding: 0,
        color: "#afafaf",
        "&:hover": {
          color: "#1f1f1f"
        },
        "&:active": {
          color: "#1f1f1f"
        }
      },
      indicatorIcon: {
        fontSize: "15px"
      },
      active: {
        color: "#494949"
      },
      buttonWrapper: {
        position: "absolute",
        height: "100px",
        backgroundColor: "transparent",
        top: "calc(50% - 70px)",
        "&:hover": {
          "& $button": {
            backgroundColor: "black",
            filter: "brightness(120%)",
            opacity: "0.4"
          }
        }
      },
      fullHeightHoverWrapper: {
        height: "100%",
        top: "0"
      },
      fullHeightHoverButton: {},
      buttonVisible: {
        opacity: "1"
      },
      buttonHidden: {
        opacity: "0"
      },
      button: {
        margin: "0 10px",
        position: "relative",
        backgroundColor: "#494949",
        top: "calc(50% - 20px) !important",
        color: "white",
        fontSize: "30px",
        transition: "200ms",
        cursor: "pointer",
        "&:hover": {
          opacity: "0.6 !important"
        }
      },
      next: {
        right: 0
      },
      prev: {
        left: 0
      }
    };
    var sanitizeNavProps = function sanitizeNavProps2(props) {
      var _ref = props || {}, className = _ref.className, style = _ref.style, rest = _objectWithoutProperties(_ref, ["className", "style"]);
      return props !== void 0 ? _extends({
        style: props.style !== void 0 ? props.style : {},
        className: props.className !== void 0 ? props.className : ""
      }, rest) : _extends({ style: {}, className: "" }, rest);
    };
    var sanitizeProps = function sanitizeProps2(props) {
      var animation = props.animation !== void 0 ? props.animation : "fade";
      var timeout = props.timeout !== void 0 ? props.timeout : animation === "fade" ? 500 : 200;
      return {
        className: props.className !== void 0 ? props.className : "",
        children: props.children ? props.children : [],
        index: props.index !== void 0 ? props.index : 0,
        strictIndexing: props.strictIndexing !== void 0 ? props.strictIndexing : true,
        autoPlay: props.autoPlay !== void 0 ? props.autoPlay : true,
        stopAutoPlayOnHover: props.stopAutoPlayOnHover !== void 0 ? props.stopAutoPlayOnHover : true,
        interval: props.interval !== void 0 ? props.interval : 4e3,
        animation,
        reverseEdgeAnimationDirection: props.reverseEdgeAnimationDirection !== void 0 ? props.reverseEdgeAnimationDirection : true,
        timeout,
        swipe: props.swipe !== void 0 ? props.swipe : true,
        navButtonsAlwaysInvisible: props.navButtonsAlwaysInvisible !== void 0 ? props.navButtonsAlwaysInvisible : false,
        navButtonsAlwaysVisible: props.navButtonsAlwaysVisible !== void 0 ? props.navButtonsAlwaysVisible : false,
        cycleNavigation: props.cycleNavigation !== void 0 ? props.cycleNavigation : true,
        fullHeightHover: props.fullHeightHover !== void 0 ? props.fullHeightHover : true,
        navButtonsWrapperProps: sanitizeNavProps(props.navButtonsWrapperProps),
        navButtonsProps: sanitizeNavProps(props.navButtonsProps),
        NavButton: props.NavButton,
        NextIcon: props.NextIcon !== void 0 ? props.NextIcon : _react2.default.createElement(_NavigateNext2.default, null),
        PrevIcon: props.PrevIcon !== void 0 ? props.PrevIcon : _react2.default.createElement(_NavigateBefore2.default, null),
        indicators: props.indicators !== void 0 ? props.indicators : true,
        indicatorContainerProps: sanitizeNavProps(props.indicatorContainerProps),
        indicatorIconButtonProps: sanitizeNavProps(props.indicatorIconButtonProps),
        activeIndicatorIconButtonProps: sanitizeNavProps(props.activeIndicatorIconButtonProps),
        IndicatorIcon: props.IndicatorIcon,
        onChange: props.onChange !== void 0 ? props.onChange : function() {
        },
        changeOnFirstRender: props.changeOnFirstRender !== void 0 ? props.changeOnFirstRender : false,
        next: props.next !== void 0 ? props.next : function() {
        },
        prev: props.prev !== void 0 ? props.prev : function() {
        }
      };
    };
    var Carousel = function(_Component) {
      _inherits(Carousel2, _Component);
      function Carousel2(props) {
        _classCallCheck(this, Carousel2);
        var _this = _possibleConstructorReturn(this, (Carousel2.__proto__ || Object.getPrototypeOf(Carousel2)).call(this, props));
        (0, _autoBind2.default)(_this);
        _this.state = {
          active: 0,
          prevActive: 0,
          displayed: 0
        };
        _this.timer = null;
        return _this;
      }
      _createClass(Carousel2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _sanitizeProps = sanitizeProps(this.props), index = _sanitizeProps.index, changeOnFirstRender = _sanitizeProps.changeOnFirstRender;
          this.setActive(index, void 0, changeOnFirstRender);
          this.start();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.stop();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          prevProps = sanitizeProps(prevProps);
          var _sanitizeProps2 = sanitizeProps(this.props), autoPlay = _sanitizeProps2.autoPlay, interval = _sanitizeProps2.interval, children = _sanitizeProps2.children, index = _sanitizeProps2.index;
          if (autoPlay !== prevProps.autoPlay || interval !== prevProps.interval) {
            this.reset();
          }
          if (children.length !== prevProps.children.length) {
            this.setActive(index);
          }
          if (prevProps.index !== index) {
            this.setActive(index);
          }
        }
      }, {
        key: "stop",
        value: function stop() {
          if (this.timer) {
            clearInterval(this.timer);
            this.timer = null;
          }
        }
      }, {
        key: "start",
        value: function start() {
          var _sanitizeProps3 = sanitizeProps(this.props), autoPlay = _sanitizeProps3.autoPlay, interval = _sanitizeProps3.interval;
          if (autoPlay) {
            this.timer = setInterval(this.next, interval);
          }
        }
      }, {
        key: "reset",
        value: function reset() {
          var _sanitizeProps4 = sanitizeProps(this.props), autoPlay = _sanitizeProps4.autoPlay;
          this.stop();
          if (autoPlay) {
            this.start();
          }
        }
      }, {
        key: "setActive",
        value: function setActive(index) {
          var _this2 = this;
          var callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
          };
          var runCallbacks = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
          var _sanitizeProps5 = sanitizeProps(this.props), onChange = _sanitizeProps5.onChange, timeout = _sanitizeProps5.timeout, children = _sanitizeProps5.children, strictIndexing = _sanitizeProps5.strictIndexing;
          if (Array.isArray(children)) {
            if (strictIndexing && index > children.length - 1)
              index = children.length - 1;
            if (strictIndexing && index < 0)
              index = 0;
          } else {
            index = 0;
          }
          var prevActive = this.state.active;
          this.setState({
            active: index,
            prevActive,
            displayed: prevActive
          }, this.reset);
          setTimeout(function() {
            _this2.setState({
              displayed: index
            }, function() {
              if (runCallbacks) {
                callback(index, prevActive);
                onChange(index, prevActive);
              }
            });
          }, timeout.exit ? timeout.exit : timeout);
        }
      }, {
        key: "next",
        value: function next(event) {
          var _sanitizeProps6 = sanitizeProps(this.props), children = _sanitizeProps6.children, next2 = _sanitizeProps6.next, cycleNavigation = _sanitizeProps6.cycleNavigation;
          var nextActive = this.state.active + 1 > children.length - 1 ? cycleNavigation ? 0 : this.state.active : this.state.active + 1;
          this.setActive(nextActive, next2);
          if (event)
            event.stopPropagation();
        }
      }, {
        key: "prev",
        value: function prev(event) {
          var _sanitizeProps7 = sanitizeProps(this.props), children = _sanitizeProps7.children, prev2 = _sanitizeProps7.prev, cycleNavigation = _sanitizeProps7.cycleNavigation;
          var nextActive = this.state.active - 1 < 0 ? cycleNavigation ? children.length - 1 : this.state.active : this.state.active - 1;
          this.setActive(nextActive, prev2);
          if (event)
            event.stopPropagation();
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          var _sanitizeProps8 = sanitizeProps(this.props), children = _sanitizeProps8.children, className = _sanitizeProps8.className, stopAutoPlayOnHover = _sanitizeProps8.stopAutoPlayOnHover, animation = _sanitizeProps8.animation, reverseEdgeAnimationDirection = _sanitizeProps8.reverseEdgeAnimationDirection, timeout = _sanitizeProps8.timeout, swipe = _sanitizeProps8.swipe, navButtonsAlwaysInvisible = _sanitizeProps8.navButtonsAlwaysInvisible, navButtonsAlwaysVisible = _sanitizeProps8.navButtonsAlwaysVisible, cycleNavigation = _sanitizeProps8.cycleNavigation, fullHeightHover = _sanitizeProps8.fullHeightHover, navButtonsProps = _sanitizeProps8.navButtonsProps, navButtonsWrapperProps = _sanitizeProps8.navButtonsWrapperProps, NavButton = _sanitizeProps8.NavButton, NextIcon = _sanitizeProps8.NextIcon, PrevIcon = _sanitizeProps8.PrevIcon, indicators = _sanitizeProps8.indicators, indicatorContainerProps = _sanitizeProps8.indicatorContainerProps, indicatorIconButtonProps = _sanitizeProps8.indicatorIconButtonProps, activeIndicatorIconButtonProps = _sanitizeProps8.activeIndicatorIconButtonProps, IndicatorIcon = _sanitizeProps8.IndicatorIcon;
          var classes = this.props.classes;
          var buttonsClass = navButtonsProps.className, buttonsStyle = navButtonsProps.style, buttonsProps = _objectWithoutProperties(navButtonsProps, ["className", "style"]);
          var buttonsWrapperClass = navButtonsWrapperProps.className, buttonsWrapperStyle = navButtonsWrapperProps.style, buttonsWrapperProps = _objectWithoutProperties(navButtonsWrapperProps, ["className", "style"]);
          var buttonVisibilityClassValue = "" + (navButtonsAlwaysVisible ? classes.buttonVisible : classes.buttonHidden);
          var buttonCssClassValue = classes.button + " " + buttonVisibilityClassValue + " " + (fullHeightHover ? classes.fullHeightHoverButton : "") + " " + buttonsClass;
          var buttonWrapperCssClassValue = classes.buttonWrapper + " " + (fullHeightHover ? classes.fullHeightHoverWrapper : "") + " " + buttonsWrapperClass;
          var compareActiveDisplayed = function compareActiveDisplayed2() {
            if (_this3.state.active === 0 && _this3.state.prevActive === children.length - 1) {
              return reverseEdgeAnimationDirection;
            }
            if (_this3.state.active === children.length - 1 && _this3.state.prevActive === 0) {
              return reverseEdgeAnimationDirection;
            }
            if (_this3.state.active > _this3.state.prevActive) {
              return true;
            }
            return false;
          };
          var showButton = function showButton2() {
            var next = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
            if (cycleNavigation)
              return true;
            if (next && _this3.state.active + 1 > children.length - 1)
              return false;
            if (!next && _this3.state.active - 1 < 0)
              return false;
            return true;
          };
          return _react2.default.createElement(
            "div",
            {
              className: classes.root + " " + (className ? className : ""),
              onMouseOver: function onMouseOver() {
                stopAutoPlayOnHover && _this3.stop();
              },
              onMouseOut: function onMouseOut() {
                stopAutoPlayOnHover && _this3.reset();
              },
              onFocus: function onFocus() {
                stopAutoPlayOnHover && _this3.stop();
              },
              onBlur: function onBlur() {
                stopAutoPlayOnHover && _this3.reset();
              }
            },
            Array.isArray(children) ? children.map(function(child, index) {
              return _react2.default.createElement(CarouselItem, {
                key: "carousel-item" + index,
                display: index === _this3.state.displayed,
                active: index === _this3.state.active,
                isNext: compareActiveDisplayed(),
                child,
                animation,
                timeout,
                swipe,
                next: _this3.next,
                prev: _this3.prev
              });
            }) : _react2.default.createElement(CarouselItem, {
              key: "carousel-item0",
              display: true,
              active: true,
              child: children,
              animation,
              timeout
            }),
            !navButtonsAlwaysInvisible && showButton(true) && _react2.default.createElement(
              "div",
              _extends({ className: buttonWrapperCssClassValue + " " + classes.next, style: buttonsWrapperStyle }, buttonsWrapperProps),
              NavButton !== void 0 ? NavButton(_extends({ onClick: this.next, className: buttonCssClassValue, style: buttonsStyle, next: true, prev: false }, buttonsProps)) : _react2.default.createElement(
                _IconButton2.default,
                _extends({ className: "" + buttonCssClassValue, onClick: this.next, "aria-label": "Next", style: buttonsStyle }, buttonsProps),
                NextIcon
              )
            ),
            !navButtonsAlwaysInvisible && showButton(false) && _react2.default.createElement(
              "div",
              _extends({ className: buttonWrapperCssClassValue + " " + classes.prev, style: buttonsWrapperStyle }, buttonsWrapperProps),
              NavButton !== void 0 ? NavButton.apply(void 0, [{ onClick: this.prev, className: buttonCssClassValue, style: navButtonsProps.style, next: false, prev: true }].concat(_toConsumableArray(buttonsProps))) : _react2.default.createElement(
                _IconButton2.default,
                _extends({ className: "" + buttonCssClassValue, onClick: this.prev, "aria-label": "Previous", style: navButtonsProps.style }, buttonsProps),
                PrevIcon
              )
            ),
            indicators ? _react2.default.createElement(Indicators, {
              classes,
              length: children.length,
              active: this.state.active,
              press: this.setActive,
              indicatorContainerProps,
              indicatorIconButtonProps,
              activeIndicatorIconButtonProps,
              IndicatorIcon
            }) : null
          );
        }
      }]);
      return Carousel2;
    }(_react.Component);
    function CarouselItem(props) {
      var swipeHandlers = (0, _reactSwipeable.useSwipeable)({
        onSwipedLeft: function onSwipedLeft() {
          return props.next();
        },
        onSwipedRight: function onSwipedRight() {
          return props.prev();
        }
      });
      swipeHandlers = props.swipe ? swipeHandlers : {};
      return props.display ? _react2.default.createElement(
        "div",
        _extends({}, swipeHandlers, { className: "CarouselItem" }),
        props.animation === "slide" ? _react2.default.createElement(
          _Slide2.default,
          { direction: props.active ? props.isNext ? "left" : "right" : props.isNext ? "right" : "left", "in": props.active, timeout: props.timeout },
          _react2.default.createElement(
            "div",
            null,
            props.child
          )
        ) : _react2.default.createElement(
          _Fade2.default,
          { "in": props.active, timeout: props.timeout },
          _react2.default.createElement(
            "div",
            null,
            props.child
          )
        )
      ) : null;
    }
    function Indicators(props) {
      var classes = props.classes;
      var IndicatorIcon = props.IndicatorIcon !== void 0 ? props.IndicatorIcon : _react2.default.createElement(_FiberManualRecord2.default, {
        size: "small",
        className: classes.indicatorIcon
      });
      var _props$indicatorIconB = props.indicatorIconButtonProps, indicatorIconButtonClass = _props$indicatorIconB.className, indicatorIconButtonStyle = _props$indicatorIconB.style, indicatorIconButtonProps = _objectWithoutProperties(_props$indicatorIconB, ["className", "style"]);
      var _props$activeIndicato = props.activeIndicatorIconButtonProps, activeIndicatorIconButtonClass = _props$activeIndicato.className, activeIndicatorIconButtonStyle = _props$activeIndicato.style, activeIndicatorIconButtonProps = _objectWithoutProperties(_props$activeIndicato, ["className", "style"]);
      var indicators = [];
      var _loop = function _loop2(i2) {
        var className = i2 === props.active ? classes.indicator + " " + indicatorIconButtonClass + " " + classes.active + " " + activeIndicatorIconButtonClass : classes.indicator + " " + indicatorIconButtonClass;
        var style = i2 === props.active ? Object.assign({}, indicatorIconButtonStyle, activeIndicatorIconButtonStyle) : indicatorIconButtonStyle;
        var restProps = i2 === props.active ? Object.assign({}, indicatorIconButtonProps, activeIndicatorIconButtonProps) : indicatorIconButtonProps;
        if (restProps["aria-label"] === void 0)
          restProps["aria-label"] = "carousel indicator";
        var item = _react2.default.createElement(
          _IconButton2.default,
          _extends({
            key: i2,
            className,
            style,
            onClick: function onClick() {
              props.press(i2);
            },
            size: "small"
          }, restProps, {
            "aria-label": restProps["aria-label"] + " " + (i2 + 1)
          }),
          IndicatorIcon
        );
        indicators.push(item);
      };
      for (var i = 0; i < props.length; i++) {
        _loop(i);
      }
      var _props$indicatorConta = props.indicatorContainerProps, indicatorContainerClass = _props$indicatorConta.className, indicatorContainerStyle = _props$indicatorConta.style, indicatorContainerProps = _objectWithoutProperties(_props$indicatorConta, ["className", "style"]);
      return _react2.default.createElement(
        "div",
        _extends({ className: classes.indicators + " " + indicatorContainerClass, style: indicatorContainerStyle }, indicatorContainerProps),
        indicators
      );
    }
    exports.default = (0, _styles.withStyles)(styles)(Carousel);
  }
});

// node_modules/react-material-ui-carousel/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-material-ui-carousel/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _Carousel = require_Carousel();
    var _Carousel2 = _interopRequireDefault(_Carousel);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _Carousel2.default;
  }
});
export default require_dist();
//# sourceMappingURL=react-material-ui-carousel.js.map
