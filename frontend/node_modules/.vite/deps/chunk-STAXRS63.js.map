{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/CardActionArea/CardActionArea.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AACA;AACO,IAAI,SAAS,SAASA,QAAO,OAAO;AACzC,SAAO;AAAA,IAEL,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,2BAA2B;AAAA,QACzB,SAAS,MAAM,QAAQ,OAAO;AAAA,MAChC;AAAA,MACA,kCAAkC;AAAA,QAChC,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IAGA,cAAc,CAAC;AAAA,IAGf,gBAAgB;AAAA,MACd,UAAU;AAAA,MACV,eAAe;AAAA,MACf,UAAU;AAAA,MACV,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,cAAc;AAAA,MACd,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,YAAY,MAAM,YAAY,OAAO,WAAW;AAAA,QAC9C,UAAU,MAAM,YAAY,SAAS;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF;AACF;AACA,IAAI,iBAAoC,iBAAW,SAASC,gBAAe,OAAO,KAAK;AACrF,MAAI,WAAW,MAAM,UACjB,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,wBAAwB,MAAM,uBAC9B,QAAQ,yBAAyB,OAAO,CAAC,YAAY,WAAW,aAAa,uBAAuB,CAAC;AAEzG,SAA0B,oBAAc,oBAAY,SAAS;AAAA,IAC3D,WAAW,eAAK,QAAQ,MAAM,SAAS;AAAA,IACvC,uBAAuB,eAAK,uBAAuB,QAAQ,YAAY;AAAA,IACvE;AAAA,EACF,GAAG,KAAK,GAAG,UAA6B,oBAAc,QAAQ;AAAA,IAC5D,WAAW,QAAQ;AAAA,EACrB,CAAC,CAAC;AACJ,CAAC;AACD,OAAwC,eAAe,YAAY;AAAA,EASjE,UAAU,kBAAAC,QAAU;AAAA,EAMpB,SAAS,kBAAAA,QAAU;AAAA,EAKnB,WAAW,kBAAAA,QAAU;AAAA,EAKrB,uBAAuB,kBAAAA,QAAU;AACnC,IAAI;AACJ,IAAO,yBAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AACR,CAAC,EAAE,cAAc;",
  "names": ["styles", "CardActionArea", "PropTypes"]
}
