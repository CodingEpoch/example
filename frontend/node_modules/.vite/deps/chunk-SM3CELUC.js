import {
  __esm
} from "./chunk-J43GMYXM.js";

// node_modules/@material-ui/core/esm/utils/createChainedFunction.js
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.reduce(function(acc, func) {
    if (func == null) {
      return acc;
    }
    if (true) {
      if (typeof func !== "function") {
        console.error("Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.");
      }
    }
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, function() {
  });
}
var init_createChainedFunction = __esm({
  "node_modules/@material-ui/core/esm/utils/createChainedFunction.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/debounce.js
function debounce(func) {
  var wait = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 166;
  var timeout;
  function debounced() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var that = this;
    var later = function later2() {
      func.apply(that, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = function() {
    clearTimeout(timeout);
  };
  return debounced;
}
var init_debounce = __esm({
  "node_modules/@material-ui/core/esm/utils/debounce.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/ownerDocument.js
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}
var init_ownerDocument = __esm({
  "node_modules/@material-ui/core/esm/utils/ownerDocument.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/ownerWindow.js
function ownerWindow(node) {
  var doc = ownerDocument(node);
  return doc.defaultView || window;
}
var init_ownerWindow = __esm({
  "node_modules/@material-ui/core/esm/utils/ownerWindow.js"() {
    init_ownerDocument();
  }
});

// node_modules/@material-ui/core/esm/transitions/utils.js
function getTransitionProps(props, options) {
  var timeout = props.timeout, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style;
  return {
    duration: style.transitionDuration || typeof timeout === "number" ? timeout : timeout[options.mode] || 0,
    delay: style.transitionDelay
  };
}
var reflow;
var init_utils = __esm({
  "node_modules/@material-ui/core/esm/transitions/utils.js"() {
    reflow = function reflow2(node) {
      return node.scrollTop;
    };
  }
});

export {
  createChainedFunction,
  init_createChainedFunction,
  debounce,
  init_debounce,
  ownerDocument,
  init_ownerDocument,
  ownerWindow,
  init_ownerWindow,
  reflow,
  getTransitionProps,
  init_utils
};
//# sourceMappingURL=chunk-SM3CELUC.js.map
